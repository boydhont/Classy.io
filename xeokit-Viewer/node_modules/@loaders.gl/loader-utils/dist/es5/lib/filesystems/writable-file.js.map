{"version":3,"file":"writable-file.js","names":["_globals","require","fs","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","makeWritableFile","pathOrStream","options","isBrowser","write","_write","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_callee$","_context","prev","next","stop","apply","arguments","close","_close","_callee2","_callee2$","_context2","outputStream","createWriteStream","_write2","_callee3","buffer","_callee3$","_context3","abrupt","Promise","resolve","reject","err","_x"],"sources":["../../../../src/lib/filesystems/writable-file.ts"],"sourcesContent":["// Forked from https://github.com/kbajalc/parquets under MIT license (Copyright (c) 2017 ironSource Ltd.)\nimport {isBrowser} from '../env-utils/globals';\nimport * as fs from '../node/fs';\nimport type {Writable} from 'stream';\n\nexport type WritableFile = {\n  write: (buf: Buffer) => Promise<void>;\n  close: () => Promise<void>;\n};\n\nexport interface WriteStreamOptions {\n  flags?: string;\n  encoding?: 'utf8';\n  fd?: number;\n  mode?: number;\n  autoClose?: boolean;\n  start?: number;\n}\n\n/** Helper function to create an envelope reader for a binary memory input */\nexport function makeWritableFile(\n  pathOrStream: string | Writable,\n  options?: WriteStreamOptions\n): WritableFile {\n  if (isBrowser) {\n    return {\n      write: async () => {},\n      close: async () => {}\n    };\n  }\n\n  const outputStream: Writable =\n    typeof pathOrStream === 'string' ? fs.createWriteStream(pathOrStream, options) : pathOrStream;\n  return {\n    write: async (buffer: Buffer) =>\n      new Promise((resolve, reject) => {\n        outputStream.write(buffer, (err) => (err ? reject(err) : resolve()));\n      }),\n    close: () =>\n      new Promise((resolve, reject) => {\n        (outputStream as any).close((err) => (err ? reject(err) : resolve()));\n      })\n  };\n}\n"],"mappings":"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"}