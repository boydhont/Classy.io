{"version":3,"file":"readable-file.js","names":["makeReadableFile","data","ArrayBuffer","arrayBuffer","read","_read","_asyncToGenerator2","default","_regenerator","mark","_callee","start","length","wrap","_callee$","_context","prev","next","abrupt","Buffer","from","stop","_x","_x2","apply","arguments","close","_close","_callee2","_callee2$","_context2","size","byteLength","blob","_read2","_callee3","_callee3$","_context3","slice","sent","_x3","_x4","_close2","_callee4","_callee4$","_context4"],"sources":["../../../../src/lib/filesystems/readable-file.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nexport type ReadableFile = {\n  read: (position: number, length: number) => Promise<Buffer>;\n  close: () => Promise<void>;\n  /** Length of file in bytes */\n  size: number;\n};\n\n/** Helper function to create an envelope reader for a binary memory input */\nexport function makeReadableFile(data: Blob | ArrayBuffer): ReadableFile {\n  if (data instanceof ArrayBuffer) {\n    const arrayBuffer: ArrayBuffer = data;\n    return {\n      read: async (start: number, length: number) => Buffer.from(data, start, length),\n      close: async () => {},\n      size: arrayBuffer.byteLength\n    };\n  }\n\n  const blob: Blob = data;\n  return {\n    read: async (start: number, length: number) => {\n      const arrayBuffer = await blob.slice(start, start + length).arrayBuffer();\n      return Buffer.from(arrayBuffer);\n    },\n    close: async () => {},\n    size: blob.size\n  };\n}\n"],"mappings":"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"}