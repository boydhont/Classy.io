{"version":3,"file":"create-loader-worker.js","names":["_workerUtils","require","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","requestId","createLoaderWorker","loader","WorkerBody","inWorkerThread","onmessage","_ref","_asyncToGenerator2","_regenerator","mark","_callee","type","payload","input","_payload$options","options","_payload$context","context","result","message","wrap","_callee$","_context","prev","next","t0","parseData","arrayBuffer","parse","parseOnMainThread","sent","postMessage","t1","Error","error","abrupt","stop","_x","_x2","Promise","resolve","reject","id","onMessage","removeEventListener","addEventListener","_x3","_parseData","_callee2","_ref2","data","parser","textDecoder","_callee2$","_context2","parseSync","parseTextSync","TextDecoder","decode","concat","name","modules","worker"],"sources":["../../../../src/lib/worker-loader-utils/create-loader-worker.ts"],"sourcesContent":["/* eslint-disable no-restricted-globals */\nimport type {LoaderWithParser} from '../../types';\nimport {WorkerBody} from '@loaders.gl/worker-utils';\n// import {validateLoaderVersion} from './validate-loader-version';\n\nlet requestId = 0;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n * @param loader\n */\nexport function createLoaderWorker(loader: LoaderWithParser) {\n  // Check that we are actually in a worker thread\n  if (!WorkerBody.inWorkerThread()) {\n    return;\n  }\n\n  WorkerBody.onmessage = async (type, payload) => {\n    switch (type) {\n      case 'process':\n        try {\n          // validateLoaderVersion(loader, data.source.split('@')[1]);\n\n          const {input, options = {}, context = {}} = payload;\n\n          const result = await parseData({\n            loader,\n            arrayBuffer: input,\n            options,\n            context: {\n              ...context,\n              parse: parseOnMainThread\n            }\n          });\n          WorkerBody.postMessage('done', {result});\n        } catch (error) {\n          const message = error instanceof Error ? error.message : '';\n          WorkerBody.postMessage('error', {error: message});\n        }\n        break;\n      default:\n    }\n  };\n}\n\nfunction parseOnMainThread(arrayBuffer: ArrayBuffer, options: {[key: string]: any}): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n\n// TODO - Support byteOffset and byteLength (enabling parsing of embedded binaries without copies)\n// TODO - Why not support async loader.parse* funcs here?\n// TODO - Why not reuse a common function instead of reimplementing loader.parse* selection logic? Keeping loader small?\n// TODO - Lack of appropriate parser functions can be detected when we create worker, no need to wait until parse\nasync function parseData({loader, arrayBuffer, options, context}) {\n  let data;\n  let parser;\n  if (loader.parseSync || loader.parse) {\n    data = arrayBuffer;\n    parser = loader.parseSync || loader.parse;\n  } else if (loader.parseTextSync) {\n    const textDecoder = new TextDecoder();\n    data = textDecoder.decode(arrayBuffer);\n    parser = loader.parseTextSync;\n  } else {\n    throw new Error(`Could not load data with ${loader.name} loader`);\n  }\n\n  // TODO - proper merge in of loader options...\n  options = {\n    ...options,\n    modules: (loader && loader.options && loader.options.modules) || {},\n    worker: false\n  };\n\n  return await parser(data, {...options}, context, loader);\n}\n"],"mappings":"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"}