{"version":3,"file":"async-deep-map.js","names":["isObject","value","_typeof2","default","asyncDeepMap","_x","_x2","_asyncDeepMap","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee","tree","func","options","_args","wrap","_callee$","_context","prev","next","length","undefined","mapSubtree","abrupt","sent","stop","_x3","_x4","_x5","_mapSubtree","_callee2","object","url","_callee2$","_context2","Array","isArray","mapArray","mapObject","_x6","_x7","_x8","_mapObject","_callee3","promises","values","_loop","key","_callee3$","_context4","promise","_loop$","_context3","then","push","t0","keys","t1","done","delegateYield","Promise","all","_x9","_x10","_mapArray","_callee4","urlArray","_args5","_callee4$","_context5","map"],"sources":["../../../../src/lib/texture-api/async-deep-map.ts"],"sourcesContent":["/*\nAsynchronously maps a deep structure of values (e.g. objects and arrays of urls).\n\nE.g. a mipmapped cubemap\n{\n  [CUBE_FACE_FRONT]: [\n    \"image-front-0.jpg\",\n    \"image-front-1.jpg\",\n    \"image-front-2.jpg\",\n  ],\n  [CUBE_MAP_BACK]: [\n    ...\n  ]\n}\n*/\n\nconst isObject = (value) => value && typeof value === 'object';\n\n// Loads a deep structure of urls (objects and arrays of urls)\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function asyncDeepMap(tree, func, options = {}) {\n  return await mapSubtree(tree, func, options);\n}\n\nexport async function mapSubtree(object, func, options) {\n  if (Array.isArray(object)) {\n    return await mapArray(object, func, options);\n  }\n\n  if (isObject(object)) {\n    return await mapObject(object, func, options);\n  }\n\n  // TODO - ignore non-urls, non-arraybuffers?\n  const url = object;\n  return await func(url, options);\n}\n\n// HELPERS\n\nasync function mapObject(object, func, options) {\n  const promises: Promise<any>[] = [];\n  const values = {};\n\n  for (const key in object) {\n    const url = object[key];\n    const promise = mapSubtree(url, func, options).then((value) => {\n      values[key] = value;\n    });\n    promises.push(promise);\n  }\n\n  await Promise.all(promises);\n\n  return values;\n}\n\nasync function mapArray(urlArray, func, options = {}) {\n  const promises = urlArray.map((url) => mapSubtree(url, func, options));\n  return await Promise.all(promises);\n}\n"],"mappings":"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"}