{"version":3,"file":"parse-to-image.js","names":["_svgUtils","require","parseToImage","_x","_x2","_x3","_parseToImage","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","arrayBuffer","options","url","blobOrDataUrl","URL","objectUrl","wrap","_callee$","_context","prev","next","getBlobOrSVGDataUrl","self","webkitURL","createObjectURL","loadToImage","abrupt","sent","revokeObjectURL","finish","stop","_x4","_x5","_loadToImage","_callee2","image","_callee2$","_context2","Image","src","decode","Promise","resolve","reject","onload","onerror","err","Error","concat","error"],"sources":["../../../../src/lib/parsers/parse-to-image.ts"],"sourcesContent":["import type {ImageLoaderOptions} from '../../image-loader';\nimport {getBlobOrSVGDataUrl} from './svg-utils';\n\n// Parses html image from array buffer\nexport async function parseToImage(\n  arrayBuffer: ArrayBuffer,\n  options: ImageLoaderOptions,\n  url?: string\n): Promise<HTMLImageElement> {\n  // Note: image parsing requires conversion to Blob (for createObjectURL).\n  // Potentially inefficient for not using `response.blob()` (and for File / Blob inputs)...\n  // But presumably not worth adding 'blob' flag to loader objects?\n\n  const blobOrDataUrl = getBlobOrSVGDataUrl(arrayBuffer, url);\n  const URL = self.URL || self.webkitURL;\n  const objectUrl = typeof blobOrDataUrl !== 'string' && URL.createObjectURL(blobOrDataUrl);\n  try {\n    return await loadToImage(objectUrl || blobOrDataUrl, options);\n  } finally {\n    if (objectUrl) {\n      URL.revokeObjectURL(objectUrl);\n    }\n  }\n}\n\nexport async function loadToImage(url, options): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = url;\n\n  // The `image.onload()` callback does not guarantee that the image has been decoded\n  // so a main thread \"freeze\" can be incurred when using the image for the first time.\n  // `Image.decode()` returns a promise that completes when image is decoded.\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decode\n  // Note: When calling `img.decode()`, we do not need to wait for `img.onload()`\n  // Note: `HTMLImageElement.decode()` is not available in Edge and IE11\n  if (options.image && options.image.decode && image.decode) {\n    await image.decode();\n    return image;\n  }\n\n  // Create a promise that tracks onload/onerror callbacks\n  return await new Promise((resolve, reject) => {\n    try {\n      image.onload = () => resolve(image);\n      image.onerror = (err) => reject(new Error(`Could not load image ${url}: ${err}`));\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n"],"mappings":"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"}