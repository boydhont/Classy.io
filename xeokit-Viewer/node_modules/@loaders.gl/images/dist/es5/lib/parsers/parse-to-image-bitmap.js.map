{"version":3,"file":"parse-to-image-bitmap.js","names":["_svgUtils","require","_parseToImage","EMPTY_OBJECT","imagebitmapOptionsSupported","parseToImageBitmap","_x","_x2","_x3","_parseToImageBitmap","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","arrayBuffer","options","url","blob","image","imagebitmapOptions","wrap","_callee$","_context","prev","next","isSVG","parseToImage","sent","getBlob","imagebitmap","safeCreateImageBitmap","abrupt","stop","_x4","_safeCreateImageBitmap","_callee2","_args2","_callee2$","_context2","length","undefined","isEmptyObject","createImageBitmap","t0","console","warn","object","key"],"sources":["../../../../src/lib/parsers/parse-to-image-bitmap.ts"],"sourcesContent":["import type {ImageLoaderOptions} from '../../image-loader';\nimport {isSVG, getBlob} from './svg-utils';\nimport {parseToImage} from './parse-to-image';\n\nconst EMPTY_OBJECT = {};\n\nlet imagebitmapOptionsSupported = true;\n\n/**\n * Asynchronously parses an array buffer into an ImageBitmap - this contains the decoded data\n * ImageBitmaps are supported on worker threads, but not supported on Edge, IE11 and Safari\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap#Browser_compatibility\n *\n * TODO - createImageBitmap supports source rect (5 param overload), pass through?\n */\nexport async function parseToImageBitmap(\n  arrayBuffer: ArrayBuffer,\n  options: ImageLoaderOptions,\n  url?: string\n): Promise<ImageBitmap> {\n  let blob;\n\n  // Cannot parse SVG directly to ImageBitmap, parse to Image first\n  if (isSVG(url)) {\n    // Note: this only works on main thread\n    const image = await parseToImage(arrayBuffer, options, url);\n    blob = image;\n  } else {\n    // Create blob from the array buffer\n    blob = getBlob(arrayBuffer, url);\n  }\n\n  const imagebitmapOptions = options && options.imagebitmap;\n\n  return await safeCreateImageBitmap(blob, imagebitmapOptions);\n}\n\n/**\n * Safely creates an imageBitmap with options\n * *\n * Firefox crashes if imagebitmapOptions is supplied\n * Avoid supplying if not provided or supported, remember if not supported\n */\nasync function safeCreateImageBitmap(\n  blob: Blob,\n  imagebitmapOptions: ImageBitmapOptions | null = null\n): Promise<ImageBitmap> {\n  if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {\n    imagebitmapOptions = null;\n  }\n\n  if (imagebitmapOptions) {\n    try {\n      // @ts-ignore Options\n      return await createImageBitmap(blob, imagebitmapOptions);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n      imagebitmapOptionsSupported = false;\n    }\n  }\n\n  return await createImageBitmap(blob);\n}\n\nfunction isEmptyObject(object) {\n  // @ts-ignore\n  for (const key in object || EMPTY_OBJECT) {\n    return false;\n  }\n  return true;\n}\n"],"mappings":"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"}