{"version":3,"file":"parse.js","names":["_workerUtils","require","_loaderUtils","_normalizeLoader","_isType","_optionUtils","_getData","_loaderContext","_resourceUtils","_selectLoader","parse","_x","_x2","_x3","_x4","_parse","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","data","loaders","options","context","url","typedLoaders","candidateLoaders","loader","wrap","_callee$","_context","prev","next","assert","_typeof2","Array","isArray","isLoaderObject","undefined","sent","getResourceUrl","getLoadersFromContext","selectLoader","abrupt","normalizeOptions","getLoaderContext","parseWithLoader","stop","_x5","_x6","_x7","_x8","_parseWithLoader","_callee2","response","ok","redirected","status","statusText","type","headers","_callee2$","_context2","validateWorkerVersion","isResponse","Object","fromEntries","entries","getArrayBufferOrStringFromData","parseTextSync","dataType","canParseWithWorker","parseWithWorker","parseText","parseSync","Error","concat","id"],"sources":["../../../../src/lib/api/parse.ts"],"sourcesContent":["import type {DataType, Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {assert, validateWorkerVersion} from '@loaders.gl/worker-utils';\nimport {parseWithWorker, canParseWithWorker} from '@loaders.gl/loader-utils';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {isResponse} from '../../javascript-utils/is-type';\nimport {normalizeOptions} from '../loader-utils/option-utils';\nimport {getArrayBufferOrStringFromData} from '../loader-utils/get-data';\nimport {getLoaderContext, getLoadersFromContext} from '../loader-utils/loader-context';\nimport {getResourceUrl} from '../utils/resource-utils';\nimport {selectLoader} from './select-loader';\n\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\nexport async function parse(\n  data: DataType | Promise<DataType>,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<any> {\n  assert(!context || typeof context === 'object'); // parse no longer accepts final url\n\n  // Signature: parse(data, options, context | url)\n  // Uses registered loaders\n  if (loaders && !Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  data = await data; // Resolve any promise\n  options = options || {};\n\n  // Extract a url for auto detection\n  const url = getResourceUrl(data);\n\n  // Chooses a loader (and normalizes it)\n  // Also use any loaders in the context, new loaders take priority\n  const typedLoaders = loaders as Loader | Loader[] | undefined;\n  const candidateLoaders = getLoadersFromContext(typedLoaders, context);\n  // todo hacky type cast\n  const loader = await selectLoader(data as ArrayBuffer, candidateLoaders, options);\n  // Note: if no loader was found, if so just return null\n  if (!loader) {\n    return null;\n  }\n\n  // Normalize options\n  options = normalizeOptions(options, loader, candidateLoaders, url);\n\n  // Get a context (if already present, will be unchanged)\n  context = getLoaderContext({url, parse, loaders: candidateLoaders}, options, context || null);\n\n  return await parseWithLoader(loader, data, options, context);\n}\n\n// TODO: support progress and abort\n// TODO - should accept loader.parseAsyncIterator and concatenate.\nasync function parseWithLoader(loader, data, options, context) {\n  validateWorkerVersion(loader);\n\n  if (isResponse(data)) {\n    // Serialize to support passing the response to web worker\n    const response = data as Response;\n    const {ok, redirected, status, statusText, type, url} = response;\n    const headers = Object.fromEntries(response.headers.entries());\n    context.response = {headers, ok, redirected, status, statusText, type, url};\n  }\n\n  data = await getArrayBufferOrStringFromData(data, loader, options);\n\n  // First check for synchronous text parser, wrap results in promises\n  if (loader.parseTextSync && typeof data === 'string') {\n    options.dataType = 'text';\n    return loader.parseTextSync(data, options, context, loader);\n  }\n\n  // If we have a workerUrl and the loader can parse the given options efficiently in a worker\n  if (canParseWithWorker(loader, options)) {\n    return await parseWithWorker(loader, data, options, context, parse);\n  }\n\n  // Check for asynchronous parser\n  if (loader.parseText && typeof data === 'string') {\n    return await loader.parseText(data, options, context, loader);\n  }\n\n  if (loader.parse) {\n    return await loader.parse(data, options, context, loader);\n  }\n\n  // This should not happen, all sync loaders should also offer `parse` function\n  assert(!loader.parseSync);\n\n  // TBD - If asynchronous parser not available, return null\n  throw new Error(`${loader.id} loader - no parser found and worker is disabled`);\n}\n"],"mappings":"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"}