{"version":3,"file":"make-node-stream.js","names":["Stream","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","_Readable","_createClass2","_classCallCheck2","Readable","makeStream","source","options","iterator","Symbol","asyncIterator","AsyncIterableReadable","_Readable2","_inherits2","_super","it","_this","_defineProperty2","_assertThisInitialized2","_iterator","_pulling","_bytesMode","objectMode","value","_read2","_asyncToGenerator2","_regenerator","mark","_callee","size","wrap","_callee$","_context","prev","next","_pull","sent","stop","_read","_x","_destroy2","_callee2","error","cb","_this$_iterator","_this$_iterator$throw","_this$_iterator2","_this$_iterator2$retu","_callee2$","_context2","abrupt","throw","return","_destroy","_x2","_x3","_pull2","_callee3","_r","bm","r","_it$return","_callee3$","_context3","t0","readable","done","ArrayBuffer","isView","byteLength","push","Uint8Array","_x4","_x5"],"sources":["../../../../src/iterators/make-stream/make-node-stream.ts"],"sourcesContent":["import type {ReadableOptions} from 'stream';\nimport * as Stream from 'stream';\n\nclass _Readable {}\n\ntype ReadableType = Stream.Readable | _Readable;\nconst Readable = Stream.Readable || _Readable;\n\nexport type MakeStreamOptions = ReadableOptions;\n\n/** Builds a node stream from an iterator */\nexport function makeStream<ArrayBuffer>(\n  source: Iterable<ArrayBuffer> | AsyncIterable<ArrayBuffer>,\n  options?: ReadableOptions\n): ReadableType {\n  const iterator = source[Symbol.asyncIterator]\n    ? source[Symbol.asyncIterator]()\n    : source[Symbol.iterator]();\n  return new AsyncIterableReadable(iterator, options);\n}\n\nclass AsyncIterableReadable extends Readable {\n  private _pulling: boolean;\n  private _bytesMode: boolean;\n  private _iterator: AsyncIterator<ArrayBuffer>;\n\n  constructor(it: AsyncIterator<ArrayBuffer>, options?: ReadableOptions) {\n    super(options);\n    this._iterator = it;\n    this._pulling = false;\n    this._bytesMode = !options || !options.objectMode;\n  }\n\n  async _read(size: number): Promise<void> {\n    if (!this._pulling) {\n      this._pulling = true;\n      this._pulling = await this._pull(size, this._iterator);\n    }\n  }\n\n  async _destroy(error: Error | null, cb: (e: Error | null) => void): Promise<void> {\n    if (!this._iterator) {\n      return;\n    }\n    if (error) {\n      await this._iterator?.throw?.(error);\n    } else {\n      await this._iterator?.return?.(error);\n    }\n    cb?.(null);\n  }\n\n  // eslint-disable-next-line complexity\n  private async _pull(size: number, it: AsyncIterator<ArrayBuffer>): Promise<boolean> {\n    const bm = this._bytesMode;\n    let r: IteratorResult<ArrayBuffer> | null = null;\n    // while (this.readable && !(r = await it.next(bm ? size : null)).done) {\n    while (this.readable && !(r = await it.next()).done) {\n      if (size !== null) {\n        size -= bm && ArrayBuffer.isView(r.value) ? r.value.byteLength : 1;\n      }\n      if (!this.push(new Uint8Array(r.value)) || size <= 0) {\n        break;\n      }\n    }\n    if ((r?.done || !this.readable) && (this.push(null) || true)) {\n      it?.return?.();\n    }\n    return !this.readable;\n  }\n}\n"],"mappings":"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"}