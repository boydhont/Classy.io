{"version":3,"file":"require-utils.node.js","names":["_module","_interopRequireDefault","require","_path","requireFromFile","_x","_requireFromFile","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","filename","response","code","wrap","_callee$","_context","prev","next","startsWith","fetch","sent","text","abrupt","requireFromString","concat","process","cwd","stop","_options","_options2","length","undefined","options","_typeof2","Error","paths","Module","_nodeModulePaths","path","dirname","parent","module","newModule","prependPaths","appendPaths","_compile","children","splice","indexOf","exports"],"sources":["../../../../src/lib/node/require-utils.node.ts"],"sourcesContent":["// Fork of https://github.com/floatdrop/require-from-string/blob/master/index.js\n// Copyright (c) Vsevolod Strukchinsky <floatdrop@gmail.com> (github.com/floatdrop)\n// MIT license\n\n// this file is not visible to webpack (it is excluded in the package.json \"browser\" field).\n\nimport Module from 'module';\nimport path from 'path';\n\n// Node.js Dynamically require from file\n// Relative names are resolved relative to cwd\n// This indirect function is provided because webpack will try to bundle `module.require`.\n// this file is not visible to webpack (it is excluded in the package.json \"browser\" field).\nexport async function requireFromFile(filename: string): Promise<any> {\n  if (filename.startsWith('http')) {\n    const response = await fetch(filename);\n    const code = await response.text();\n    return requireFromString(code);\n  }\n\n  if (!filename.startsWith('/')) {\n    filename = `${process.cwd()}/${filename}`;\n  }\n  return require(filename);\n}\n\n// Dynamically require from string\n// - `code` - Required - Type: string - Module code.\n// - `filename` - Type: string - Default: '' - Optional filename.\n// - `options.appendPaths` Type: Array List of paths, that will be appended to module paths.\n// Useful, when you want to be able require modules from these paths.\n// - `options.prependPaths` Type: Array Same as appendPaths, but paths will be prepended.\nexport function requireFromString(\n  code: string,\n  filename = '',\n  options?: {\n    prependPaths?: string[];\n    appendPaths?: string[];\n  }\n): any {\n  if (typeof filename === 'object') {\n    options = filename;\n    filename = '';\n  }\n\n  if (typeof code !== 'string') {\n    throw new Error(`code must be a string, not ${typeof code}`);\n  }\n\n  // @ts-ignore\n  const paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const parent = module.parent;\n  // @ts-ignore\n  const newModule = new Module(filename, parent);\n  newModule.filename = filename;\n  newModule.paths = ([] as string[])\n    .concat(options?.prependPaths || [])\n    .concat(paths)\n    .concat(options?.appendPaths || []);\n  // @ts-ignore\n  newModule._compile(code, filename);\n\n  if (parent && parent.children) {\n    parent.children.splice(parent.children.indexOf(newModule), 1);\n  }\n\n  return newModule.exports;\n}\n"],"mappings":"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"}