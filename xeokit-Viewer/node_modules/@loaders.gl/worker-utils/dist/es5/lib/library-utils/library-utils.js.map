{"version":3,"file":"library-utils.js","names":["_globals","require","node","_interopRequireWildcard","_assert","_version","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","LATEST","VERSION","loadLibraryPromises","loadLibrary","_x","_loadLibrary","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee","libraryUrl","moduleName","options","_args","wrap","_callee$","_context","prev","next","length","undefined","getLibraryUrl","loadLibraryFromFile","abrupt","sent","stop","library","startsWith","modules","isBrowser","concat","CDN","assert","isWorker","_x2","_loadLibraryFromFile","_callee2","_response","response","scriptSource","_callee2$","_context2","endsWith","fetch","arrayBuffer","t0","requireFromFile","t1","importScripts","text","loadLibraryFromString","id","requireFromString","eval","global","script","document","createElement","appendChild","createTextNode","e","body"],"sources":["../../../../src/lib/library-utils/library-utils.ts"],"sourcesContent":["/* global importScripts */\nimport {global, isBrowser, isWorker} from '../env-utils/globals';\nimport * as node from '../node/require-utils.node';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\n/**\n * TODO - unpkg.com doesn't seem to have a `latest` specifier for alpha releases...\n * 'beta' on beta branch, 'latest' on prod branch\n */\nconst LATEST = 'latest';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : LATEST;\n\nconst loadLibraryPromises: Record<string, Promise<any>> = {}; // promises\n\n/**\n * Dynamically loads a library (\"module\")\n *\n * - wasm library: Array buffer is returned\n * - js library: Parse JS is returned\n *\n * Method depends on environment\n * - browser - script element is created and installed on document\n * - worker - eval is called on global context\n * - node - file is required\n *\n * @param libraryUrl\n * @param moduleName\n * @param options\n */\nexport async function loadLibrary(\n  libraryUrl: string,\n  moduleName: string | null = null,\n  options: object = {}\n): Promise<any> {\n  if (moduleName) {\n    libraryUrl = getLibraryUrl(libraryUrl, moduleName, options);\n  }\n\n  // Ensure libraries are only loaded once\n\n  loadLibraryPromises[libraryUrl] =\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    loadLibraryPromises[libraryUrl] || loadLibraryFromFile(libraryUrl);\n  return await loadLibraryPromises[libraryUrl];\n}\n\n// TODO - sort out how to resolve paths for main/worker and dev/prod\nexport function getLibraryUrl(library: string, moduleName?: string, options?: any): string {\n  // Check if already a URL\n  if (library.startsWith('http')) {\n    return library;\n  }\n\n  // Allow application to import and supply libraries through `options.modules`\n  const modules = options.modules || {};\n  if (modules[library]) {\n    return modules[library];\n  }\n\n  // Load from local files, not from CDN scripts in Node.js\n  // TODO - needs to locate the modules directory when installed!\n  if (!isBrowser) {\n    return `modules/${moduleName}/dist/libs/${library}`;\n  }\n\n  // In browser, load from external scripts\n  if (options.CDN) {\n    assert(options.CDN.startsWith('http'));\n    return `${options.CDN}/${moduleName}@${VERSION}/dist/libs/${library}`;\n  }\n\n  // TODO - loading inside workers requires paths relative to worker script location...\n  if (isWorker) {\n    return `../src/libs/${library}`;\n  }\n\n  return `modules/${moduleName}/src/libs/${library}`;\n}\n\nasync function loadLibraryFromFile(libraryUrl: string): Promise<any> {\n  if (libraryUrl.endsWith('wasm')) {\n    const response = await fetch(libraryUrl);\n    return await response.arrayBuffer();\n  }\n\n  if (!isBrowser) {\n    try {\n      return node && node.requireFromFile && (await node.requireFromFile(libraryUrl));\n    } catch {\n      return null;\n    }\n  }\n  if (isWorker) {\n    return importScripts(libraryUrl);\n  }\n  // TODO - fix - should be more secure than string parsing since observes CORS\n  // if (isBrowser) {\n  //   return await loadScriptFromFile(libraryUrl);\n  // }\n\n  const response = await fetch(libraryUrl);\n  const scriptSource = await response.text();\n  return loadLibraryFromString(scriptSource, libraryUrl);\n}\n\n/*\nasync function loadScriptFromFile(libraryUrl) {\n  const script = document.createElement('script');\n  script.src = libraryUrl;\n  return await new Promise((resolve, reject) => {\n    script.onload = data => {\n      resolve(data);\n    };\n    script.onerror = reject;\n  });\n}\n*/\n\n// TODO - Needs security audit...\n//  - Raw eval call\n//  - Potentially bypasses CORS\n// Upside is that this separates fetching and parsing\n// we could create a`LibraryLoader` or`ModuleLoader`\nfunction loadLibraryFromString(scriptSource: string, id: string): null | any {\n  if (!isBrowser) {\n    return node.requireFromString && node.requireFromString(scriptSource, id);\n  }\n\n  if (isWorker) {\n    // Use lvalue trick to make eval run in global scope\n    eval.call(global, scriptSource); // eslint-disable-line no-eval\n    // https://stackoverflow.com/questions/9107240/1-evalthis-vs-evalthis-in-javascript\n    // http://perfectionkills.com/global-eval-what-are-the-options/\n    return null;\n  }\n\n  const script = document.createElement('script');\n  script.id = id;\n  // most browsers like a separate text node but some throw an error. The second method covers those.\n  try {\n    script.appendChild(document.createTextNode(scriptSource));\n  } catch (e) {\n    script.text = scriptSource;\n  }\n  document.body.appendChild(script);\n  return null;\n}\n\n// TODO - technique for module injection into worker, from THREE.DracoLoader...\n/*\nfunction combineWorkerWithLibrary(worker, jsContent) {\n  var fn = wWorker.toString();\n  var body = [\n    '// injected',\n    jsContent,\n    '',\n    '// worker',\n    fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))\n  ].join('\\n');\n  this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n}\n*/\n"],"mappings":"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"}