{"version":3,"file":"worker-thread.js","names":["_worker_threads","require","_globals","_assert","_getLoadableWorkerUrl","_getTransferList","NOOP","WorkerThread","props","_classCallCheck2","default","_defineProperty2","name","source","url","assert","onMessage","onError","error","console","log","worker","isBrowser","_createBrowserWorker","_createNodeWorker","_createClass2","key","value","destroy","terminate","terminated","get","Boolean","postMessage","data","transferList","getTransferList","_getErrorFromErrorEvent","event","message","concat","lineno","colno","Error","_this","_loadableURL","getLoadableWorkerURL","Worker","onmessage","onerror","onmessageerror","_this2","absolute","includes","startsWith","NodeWorker","eval","on","code","isSupported","exports"],"sources":["../../../../src/lib/worker-farm/worker-thread.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport {NodeWorker, NodeWorkerType} from '../node/worker_threads';\nimport {isBrowser} from '../env-utils/globals';\nimport {assert} from '../env-utils/assert';\nimport {getLoadableWorkerURL} from '../worker-utils/get-loadable-worker-url';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst NOOP = () => {};\n\nexport type WorkerThreadProps = {\n  name: string;\n  source?: string;\n  url?: string;\n};\n\n/**\n * Represents one worker thread\n */\nexport default class WorkerThread {\n  readonly name: string;\n  readonly source: string | undefined;\n  readonly url: string | undefined;\n  terminated: boolean = false;\n  worker: Worker | NodeWorkerType;\n  onMessage: (message: any) => void;\n  onError: (error: Error) => void;\n\n  private _loadableURL: string = '';\n\n  /** Checks if workers are supported on this platform */\n  static isSupported(): boolean {\n    return (\n      (typeof Worker !== 'undefined' && isBrowser) ||\n      (typeof NodeWorker !== 'undefined' && !isBrowser)\n    );\n  }\n\n  constructor(props: WorkerThreadProps) {\n    const {name, source, url} = props;\n    assert(source || url); // Either source or url must be defined\n    this.name = name;\n    this.source = source;\n    this.url = url;\n    this.onMessage = NOOP;\n    this.onError = (error) => console.log(error); // eslint-disable-line\n\n    this.worker = isBrowser ? this._createBrowserWorker() : this._createNodeWorker();\n  }\n\n  /**\n   * Terminate this worker thread\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    this.onMessage = NOOP;\n    this.onError = NOOP;\n    this.worker.terminate(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    this.terminated = true;\n  }\n\n  get isRunning() {\n    return Boolean(this.onMessage);\n  }\n\n  /**\n   * Send a message to this worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   * @param transferList If not supplied, calculated automatically by traversing data\n   */\n  postMessage(data: any, transferList?: any[]): void {\n    transferList = transferList || getTransferList(data);\n    // @ts-ignore\n    this.worker.postMessage(data, transferList);\n  }\n\n  // PRIVATE\n\n  /**\n   * Generate a standard Error from an ErrorEvent\n   * @param event\n   */\n  _getErrorFromErrorEvent(event: ErrorEvent): Error {\n    // Note Error object does not have the expected fields if loading failed completely\n    // https://developer.mozilla.org/en-US/docs/Web/API/Worker#Event_handlers\n    // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n    let message = 'Failed to load ';\n    message += `worker ${this.name} from ${this.url}. `;\n    if (event.message) {\n      message += `${event.message} in `;\n    }\n    // const hasFilename = event.filename && !event.filename.startsWith('blob:');\n    // message += hasFilename ? event.filename : this.source.slice(0, 100);\n    if (event.lineno) {\n      message += `:${event.lineno}:${event.colno}`;\n    }\n    return new Error(message);\n  }\n\n  /**\n   * Creates a worker thread on the browser\n   */\n  _createBrowserWorker(): Worker {\n    this._loadableURL = getLoadableWorkerURL({source: this.source, url: this.url});\n    const worker = new Worker(this._loadableURL, {name: this.name});\n\n    worker.onmessage = (event) => {\n      if (!event.data) {\n        this.onError(new Error('No data received'));\n      } else {\n        this.onMessage(event.data);\n      }\n    };\n    // This callback represents an uncaught exception in the worker thread\n    worker.onerror = (error: ErrorEvent): void => {\n      this.onError(this._getErrorFromErrorEvent(error));\n      this.terminated = true;\n    };\n    // TODO - not clear when this would be called, for now just log in case it happens\n    worker.onmessageerror = (event) => console.error(event); // eslint-disable-line\n\n    return worker;\n  }\n\n  /**\n   * Creates a worker thread in node.js\n   * @todo https://nodejs.org/api/async_hooks.html#async-resource-worker-pool\n   */\n  _createNodeWorker(): NodeWorkerType {\n    let worker: NodeWorkerType;\n    if (this.url) {\n      // Make sure relative URLs start with './'\n      const absolute = this.url.includes(':/') || this.url.startsWith('/');\n      const url = absolute ? this.url : `./${this.url}`;\n      // console.log('Starting work from', url);\n      worker = new NodeWorker(url, {eval: false});\n    } else if (this.source) {\n      worker = new NodeWorker(this.source, {eval: true});\n    } else {\n      throw new Error('no worker');\n    }\n    worker.on('message', (data) => {\n      // console.error('message', data);\n      this.onMessage(data);\n    });\n    worker.on('error', (error) => {\n      // console.error('error', error);\n      this.onError(error);\n    });\n    worker.on('exit', (code) => {\n      // console.error('exit', code);\n    });\n    return worker;\n  }\n}\n"],"mappings":"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"}