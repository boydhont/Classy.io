{"version":3,"file":"draco-module-loader.js","names":["_workerUtils","require","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","DRACO_DECODER_VERSION","DRACO_ENCODER_VERSION","STATIC_DECODER_URL","concat","DRACO_JS_DECODER_URL","DRACO_WASM_WRAPPER_URL","DRACO_WASM_DECODER_URL","DRACO_ENCODER_URL","loadDecoderPromise","loadEncoderPromise","loadDracoDecoderModule","_x","_loadDracoDecoderModule","_asyncToGenerator2","_regenerator","mark","_callee","options","modules","wrap","_callee$","_context","prev","next","draco3d","createDecoderModule","then","draco","loadDracoDecoder","abrupt","sent","stop","loadDracoEncoderModule","_x2","_loadDracoEncoderModule","_callee2","_callee2$","_context2","createEncoderModule","loadDracoEncoder","_x3","_loadDracoDecoder","_callee3","DracoDecoderModule","wasmBinary","_yield$Promise$all","_yield$Promise$all2","_callee3$","_context3","t0","decoderType","loadLibrary","t1","Promise","t2","t3","t4","all","call","_slicedToArray2","globalThis","initializeDracoDecoder","resolve","onModuleLoaded","_x4","_loadDracoEncoder","_callee4","DracoEncoderModule","_callee4$","_context4"],"sources":["../../../src/lib/draco-module-loader.ts"],"sourcesContent":["// Dynamic DRACO module loading inspired by THREE.DRACOLoader\n// https://github.com/mrdoob/three.js/blob/398c4f39ebdb8b23eefd4a7a5ec49ec0c96c7462/examples/jsm/loaders/DRACOLoader.js\n// by Don McCurdy / https://www.donmccurdy.com / MIT license\n\nimport {loadLibrary} from '@loaders.gl/worker-utils';\n\nconst DRACO_DECODER_VERSION = '1.5.5';\nconst DRACO_ENCODER_VERSION = '1.4.1';\n\nconst STATIC_DECODER_URL = `https://www.gstatic.com/draco/versioned/decoders/${DRACO_DECODER_VERSION}`;\n\nconst DRACO_JS_DECODER_URL = `${STATIC_DECODER_URL}/draco_decoder.js`;\nconst DRACO_WASM_WRAPPER_URL = `${STATIC_DECODER_URL}/draco_wasm_wrapper.js`;\nconst DRACO_WASM_DECODER_URL = `${STATIC_DECODER_URL}/draco_decoder.wasm`;\n\nconst DRACO_ENCODER_URL = `https://raw.githubusercontent.com/google/draco/${DRACO_ENCODER_VERSION}/javascript/draco_encoder.js`;\n\nlet loadDecoderPromise;\nlet loadEncoderPromise;\n\nexport async function loadDracoDecoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadDecoderPromise =\n      loadDecoderPromise ||\n      modules.draco3d.createDecoderModule({}).then((draco) => {\n        return {draco};\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadDecoderPromise = loadDecoderPromise || loadDracoDecoder(options);\n  }\n  return await loadDecoderPromise;\n}\n\nexport async function loadDracoEncoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadEncoderPromise =\n      loadEncoderPromise ||\n      modules.draco3d.createEncoderModule({}).then((draco) => {\n        return {draco};\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadEncoderPromise = loadEncoderPromise || loadDracoEncoder(options);\n  }\n  return await loadEncoderPromise;\n}\n\n// DRACO DECODER LOADING\n\nasync function loadDracoDecoder(options) {\n  let DracoDecoderModule;\n  let wasmBinary;\n  switch (options.draco && options.draco.decoderType) {\n    case 'js':\n      DracoDecoderModule = await loadLibrary(DRACO_JS_DECODER_URL, 'draco', options);\n      break;\n\n    case 'wasm':\n    default:\n      [DracoDecoderModule, wasmBinary] = await Promise.all([\n        await loadLibrary(DRACO_WASM_WRAPPER_URL, 'draco', options),\n        await loadLibrary(DRACO_WASM_DECODER_URL, 'draco', options)\n      ]);\n  }\n  // Depends on how import happened...\n  // @ts-ignore\n  DracoDecoderModule = DracoDecoderModule || globalThis.DracoDecoderModule;\n  return await initializeDracoDecoder(DracoDecoderModule, wasmBinary);\n}\n\nfunction initializeDracoDecoder(DracoDecoderModule, wasmBinary) {\n  const options: {wasmBinary?: any} = {};\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    DracoDecoderModule({\n      ...options,\n      onModuleLoaded: (draco) => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n\n// ENCODER\n\nasync function loadDracoEncoder(options) {\n  let DracoEncoderModule = await loadLibrary(DRACO_ENCODER_URL, 'draco', options);\n  // @ts-ignore\n  DracoEncoderModule = DracoEncoderModule || globalThis.DracoEncoderModule;\n\n  return new Promise((resolve) => {\n    DracoEncoderModule({\n      onModuleLoaded: (draco) => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n"],"mappings":"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"}