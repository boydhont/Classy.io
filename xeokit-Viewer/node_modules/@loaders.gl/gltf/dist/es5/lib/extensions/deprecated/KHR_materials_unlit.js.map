{"version":3,"file":"KHR_materials_unlit.js","names":["_gltfScenegraph","_interopRequireDefault","require","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","KHR_MATERIALS_UNLIT","exports","decode","_x","_decode","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","gltfData","gltfScenegraph","json","_iterator2","_step2","material","extension","wrap","_callee$","_context","prev","GLTFScenegraph","materials","extensions","KHR_materials_unlit","unlit","removeObjectExtension","removeExtension","stop","encode","_iterator","_step","addObjectExtension","addExtension"],"sources":["../../../../../src/lib/extensions/deprecated/KHR_materials_unlit.ts"],"sourcesContent":["// GLTF EXTENSION: KHR_materials_unlit\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\nimport type {GLTF} from '../../types/gltf-types';\n\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\n\nconst KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\n\nexport const name = KHR_MATERIALS_UNLIT;\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const material of json.materials || []) {\n    const extension = material.extensions && material.extensions.KHR_materials_unlit;\n    if (extension) {\n      // @ts-ignore TODO\n      material.unlit = true;\n    }\n    gltfScenegraph.removeObjectExtension(material, KHR_MATERIALS_UNLIT);\n  }\n\n  // Remove the top-level extension\n  gltfScenegraph.removeExtension(KHR_MATERIALS_UNLIT);\n}\n\nexport function encode(gltfData) {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.materials) {\n    for (const material of json.materials || []) {\n      // @ts-ignore\n      if (material.unlit) {\n        // @ts-ignore\n        delete material.unlit;\n        gltfScenegraph.addObjectExtension(material, KHR_MATERIALS_UNLIT, {});\n        gltfScenegraph.addExtension(KHR_MATERIALS_UNLIT);\n      }\n    }\n  }\n}\n"],"mappings":"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"}