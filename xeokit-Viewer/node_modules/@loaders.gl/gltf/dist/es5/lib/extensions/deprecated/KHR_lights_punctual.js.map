{"version":3,"file":"KHR_lights_punctual.js","names":["_assert","require","_gltfScenegraph","_interopRequireDefault","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","KHR_LIGHTS_PUNCTUAL","exports","decode","_x","_decode","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","gltfData","gltfScenegraph","json","extension","_iterator","_step","node","nodeExtension","wrap","_callee$","_context","prev","GLTFScenegraph","getExtension","lights","removeExtension","nodes","getObjectExtension","light","removeObjectExtension","stop","encode","_x2","_encode","_callee2","_iterator2","_step2","_callee2$","_context2","addExtension","assert","addObjectExtension"],"sources":["../../../../../src/lib/extensions/deprecated/KHR_lights_punctual.ts"],"sourcesContent":["// GLTF EXTENSION: KHR_lights_punctual\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\nimport type {GLTF} from '../../types/gltf-types';\n\nimport {assert} from '../../utils/assert';\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\n\nconst KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\n\nexport const name = KHR_LIGHTS_PUNCTUAL;\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Move the light array out of the extension and remove the extension\n  const extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n  if (extension) {\n    // @ts-ignore\n    gltfScenegraph.json.lights = extension.lights;\n    gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n  }\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const node of json.nodes || []) {\n    const nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n    if (nodeExtension) {\n      // @ts-ignore\n      node.light = nodeExtension.light;\n    }\n    gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n  }\n}\n\n// Move the light ar ray out of the extension and remove the extension\nexport async function encode(gltfData): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // @ts-ignore\n  if (json.lights) {\n    const extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n    // @ts-ignore\n    assert(!extension.lights);\n    // @ts-ignore\n    extension.lights = json.lights;\n    // @ts-ignore\n    delete json.lights;\n  }\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.json.lights) {\n    // @ts-ignore\n    for (const light of gltfScenegraph.json.lights) {\n      const node = light.node;\n      gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n    }\n    // @ts-ignore\n    delete gltfScenegraph.json.lights;\n  }\n}\n"],"mappings":"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"}